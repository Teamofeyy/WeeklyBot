from aiogram.types import Message, CallbackQuery
from utils import create_status_keyboard
from github import get_github_issues

async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ GitHub Projects.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á.",
        reply_markup=create_status_keyboard()
    )

async def process_callback(callback_query: CallbackQuery):
    if callback_query.data == "get_issues":
        await callback_query.answer("–ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ GitHub...")

        try:
            issues = get_github_issues()
            if not issues:
                await callback_query.message.answer("–ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏
            formatted_issues = "\n\n".join(
                f"üìä–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á –ø–æ –ø—Ä–æ–µ–∫—Ç—É\n"
                f"**{issue['title']}**\n"
                f" -–û–ø–∏—Å–∞–Ω–∏–µ: {issue['body']}\n"
                f" -–°–æ—Å—Ç–æ—è–Ω–∏–µ: {issue['state']}\n"
                f" -–°—Ç–∞—Ç—É—Å: {issue['status']}\n"  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
                f" -[–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞—á—É]({issue['url']})\n"
                f"–°–æ–∑–¥–∞–Ω–∞: {issue['createdAt']}\n"
                for issue in issues
            )

            await callback_query.message.answer(formatted_issues, parse_mode="Markdown")

        except Exception as e:
            await callback_query.message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á: {e}")